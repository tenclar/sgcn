<?xml version="1.0" encoding="UTF-8" ?>

<b:beans xmlns="http://www.springframework.org/schema/security" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:b="http://www.springframework.org/schema/beans"
         xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                            http://www.springframework.org/schema/security
                            http://www.springframework.org/schema/security/spring-security-3.0.xsd">
                                
                                

                                
    <http auto-config="true" access-denied-page="/negado.jsf" disable-url-rewriting="true"   >
<!--        <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />-->
<!--        <custom-filter ref="sessionManagementFilter" before="SESSION_MANAGEMENT_FILTER" />-->
        
<!--        <intercept-url pattern="/index.jsf" access="ROLE_CONS,ROLE_USER,ROLE_ADMIN" />-->
        <intercept-url pattern="/index.jsf" access="ROLE_MCI, ROLE_TI, ROLE_MGC, ROLE_MPM, ROLE_MAC" />
        <intercept-url pattern="/expirado.jsf" access="IS_AUTHENTICATED_ANONYMOUSLY,ROLE_ANONYMOUS"  />
        <intercept-url pattern="/erro.jsf" access="IS_AUTHENTICATED_ANONYMOUSLY,ROLE_ANONYMOUS"  />
        <intercept-url pattern="/error.jsp" access="IS_AUTHENTICATED_ANONYMOUSLY,ROLE_ANONYMOUS"  />
        <intercept-url pattern="/css/**" access="IS_AUTHENTICATED_ANONYMOUSLY, ROLE_ANONYMOUS" />   
        <intercept-url pattern="/admin/**" access="ROLE_TI" /> 
        <intercept-url pattern="/mci/**" access="ROLE_MCI" />
        <intercept-url pattern="/mgc/**" access="ROLE_MGC" />
        <intercept-url pattern="/mpm/**" access="ROLE_MPM" />
        <intercept-url pattern="/mac/**" access="ROLE_MAC" />     
   
        <form-login login-page="/login.jsf" 
                    default-target-url="/index.jsf"  
                    authentication-failure-url="/login.jsf?erro=true"  />
        <logout  invalidate-session="true" logout-success-url="/login.jsf" logout-url="/j_spring_security_logout"     />
<!--            <session-management invalid-session-url="/login.jsf"    >  
              <concurrency-control expired-url="/login.jsf"   /> 
        </session-management>-->

       
    </http>
      <!--<b:property name="url" value="jdbc:mysql://10.1.2.133:3306/sgcn?useSSL=false" />-->
     <!--   <session-management invalid-session-url="/login.jsf"    >  
       <concurrency-control expired-url="/login.jsf" max-sessions="1" error-if-maximum-exceeded="true"  /> invalidate-session="true" 
        </session-management> -->
    <b:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <b:property name="url" value="jdbc:mysql://localhost:3306/sgcn?useSSL=false" />
        <b:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <b:property name="username" value="sgcn" />
        <b:property name="password" value="Sgcn@130" />
        
        
    </b:bean>
    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT login as username, senha as password, status as enable FROM adm_usuario WHERE login=?"
                               authorities-by-username-query=" SELECT adm_usuario.login AS username, adm_permissao.regra AS authority 
                                                                      FROM adm_usrpermissao adm_usrpermissao
                                                                      INNER JOIN adm_permissao adm_permissao ON adm_usrpermissao.permissao_id = adm_permissao.id
                                                                      INNER JOIN adm_usuario adm_usuario ON adm_usrpermissao.usuario_id = adm_usuario.id 
                                                                      WHERE adm_usuario.login =?"   />
            
           
        </authentication-provider>
    </authentication-manager>
    
    
    
  
    
    <b:bean class="listener.TestEventListener" />
<!--    <b:bean class="org.springframework.security.access.event.LoggerListener" />
    <b:bean class="org.springframework.security.authentication.event.LoggerListener" /> -->
        
        <!--    <b:bean id="concurrencyFilter"  class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <b:property name="sessionRegistry" ref="sessionRegistry" />
        <b:property name="expiredUrl" value="/expirado.jsf" />
    </b:bean>                           
    
    <b:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />-->
<!--    <b:bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
        <b:constructor-arg name="securityContextRepository" ref="httpSessionSecurityContextRepository" />
        <b:property name="invalidSessionUrl" value="/expirado.jsf" />
         this permits redirection to session timeout page from javascript/ajax or http 
        <b:property name="redirectStrategy" ref="jsfRedirectStrategy" />
    </b:bean>-->

<!--    <b:bean id="jsfRedirectStrategy" class="com.icesoft.spring.security.JsfRedirectStrategy"/>-->
<!--    <b:bean id="httpSessionSecurityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"/>-->

    
   


   
</b:beans>